{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js"],"sourcesContent":["(function () {\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.status = Game.Status.idle;\n        this.initialState = initialState;\n        this.state = JSON.parse(JSON.stringify(initialState));\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.getStatus() === Game.Status.playing) {\n                    var newState = [];\n                    for(var r = 0; r < this.state.length; r++){\n                        var row = this.state[r];\n                        row = this.move(row);\n                        newState[r] = row;\n                    }\n                    if (this.checkPossibilityOfMerging(newState)) {\n                        this.state = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(newState);\n                        this.checkIsWin();\n                        this.putNewGameNumber();\n                    }\n                    this.checkStatusLose(newState);\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.getStatus() === Game.Status.playing) {\n                    var newState = [];\n                    for(var r = 0; r < this.state.length; r++){\n                        var row = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.state[r]);\n                        row.reverse();\n                        row = this.move(row);\n                        row.reverse();\n                        newState[r] = row;\n                    }\n                    if (this.checkPossibilityOfMerging(newState)) {\n                        this.state = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(newState);\n                        this.checkIsWin();\n                        this.putNewGameNumber();\n                    }\n                    this.checkStatusLose(newState);\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.getStatus() === Game.Status.playing) {\n                    var newState = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(Array(4)).map(function() {\n                        return Array(4).fill(0);\n                    });\n                    for(var c = 0; c < this.state.length; c++){\n                        var row = [\n                            this.state[0][c],\n                            this.state[1][c],\n                            this.state[2][c],\n                            this.state[3][c]\n                        ];\n                        row = this.move(row);\n                        for(var r = 0; r < this.state.length; r++)newState[r][c] = row[r];\n                    }\n                    if (this.checkPossibilityOfMerging(newState)) {\n                        this.state = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(newState);\n                        this.checkIsWin();\n                        this.putNewGameNumber();\n                    }\n                    this.checkStatusLose(newState);\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.getStatus() === Game.Status.playing) {\n                    var newState = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(Array(4)).map(function() {\n                        return Array(4).fill(0);\n                    });\n                    for(var c = 0; c < this.state.length; c++){\n                        var row = [\n                            this.state[0][c],\n                            this.state[1][c],\n                            this.state[2][c],\n                            this.state[3][c]\n                        ].reverse();\n                        row = this.move(row);\n                        row = row.reverse();\n                        for(var r = 0; r < this.state.length; r++)newState[r][c] = row[r];\n                    }\n                    if (this.checkPossibilityOfMerging(newState)) {\n                        this.state = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(newState);\n                        this.checkIsWin();\n                        this.putNewGameNumber();\n                    }\n                    this.checkStatusLose(newState);\n                }\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.Status.playing;\n                this.putNewGameNumber();\n                this.putNewGameNumber();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.score = 0;\n                this.status = Game.Status.idle;\n                this.state = JSON.parse(JSON.stringify(this.initialState));\n            }\n        },\n        {\n            key: \"checkIsWin\",\n            value: function checkIsWin() {\n                for(var i = 0; i < this.state.length; i++){\n                    for(var j = 0; j < this.state[i].length; j++)if (this.state[i][j] === 2048) {\n                        this.status = Game.Status.win;\n                        return;\n                    }\n                }\n            }\n        },\n        {\n            key: \"checkPossibilityOfMerging\",\n            value: function checkPossibilityOfMerging(newState) {\n                return JSON.stringify(this.state) !== JSON.stringify(newState);\n            }\n        },\n        {\n            key: \"checkPossibilityOfMoving\",\n            value: function checkPossibilityOfMoving() {\n                var lengthOfArray = this.state.length;\n                for(var i = 0; i < lengthOfArray; i++)for(var j = 0; j < lengthOfArray; j++){\n                    if (j < lengthOfArray - 1 && this.state[i][j] === this.state[i][j + 1]) return true;\n                    if (i < lengthOfArray - 1 && this.state[i][j] === this.state[i + 1][j]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"checkStatusLose\",\n            value: function checkStatusLose() {\n                if (this.getEmptyCells().length === 0 && !this.checkPossibilityOfMoving()) this.status = Game.Status.lose;\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(row) {\n                var fillRow = row.filter(function(num) {\n                    return num !== 0;\n                });\n                for(var i = 0; i < fillRow.length - 1; i++)if (fillRow[i] === fillRow[i + 1]) {\n                    fillRow[i] *= 2;\n                    fillRow[i + 1] = 0;\n                    this.score += fillRow[i];\n                }\n                var newFillRow = fillRow.filter(function(num) {\n                    return num !== 0;\n                });\n                while(newFillRow.length < 4)newFillRow.push(0);\n                return newFillRow;\n            }\n        },\n        {\n            key: \"getEmptyCells\",\n            value: function getEmptyCells() {\n                var emptyCells = [];\n                for(var i = 0; i < this.state.length; i++){\n                    for(var j = 0; j < this.state[i].length; j++)if (this.state[i][j] === 0) emptyCells.push([\n                        i,\n                        j\n                    ]);\n                }\n                return emptyCells;\n            }\n        },\n        {\n            key: \"putNewGameNumber\",\n            value: function putNewGameNumber() {\n                var emptyCells = this.getEmptyCells();\n                if (emptyCells.length !== 0) {\n                    var getRandomEmptyCell = Math.floor(Math.random() * emptyCells.length);\n                    var row = emptyCells[getRandomEmptyCell][0];\n                    var column = emptyCells[getRandomEmptyCell][1];\n                    this.state[row][column] = Math.random() >= 0.9 ? 4 : 2;\n                }\n            }\n        }\n    ]);\n    return Game;\n}();\n/**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */ (0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$var$Game, \"Status\", {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$button = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\n$197cd56b15c33885$var$button.addEventListener(\"click\", function(e) {\n    if ($197cd56b15c33885$var$button.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$button.classList.replace(\"start\", \"restart\");\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$updateGameField();\n    } else {\n        $197cd56b15c33885$var$button.classList.replace(\"restart\", \"start\");\n        $197cd56b15c33885$var$button.textContent = \"Start\";\n        $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$updateGameField();\n        $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n    }\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    switch(e.key){\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n    if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.Status.lose) $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n    if ($197cd56b15c33885$var$game.getStatus() === $3d28d7f1aac198f5$exports.Status.win) $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$updateGameField();\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n});\nfunction $197cd56b15c33885$var$updateGameField() {\n    var rows = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(document.querySelectorAll(\".field-row\"));\n    var cells = rows.map(function(row) {\n        return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row.children);\n    });\n    var state = $197cd56b15c33885$var$game.getState();\n    state.forEach(function(row, i) {\n        row.forEach(function(cell, j) {\n            var currentCell = cells[i][j];\n            currentCell.className = !cell ? \"field-cell\" : \"field-cell field-cell--\".concat(cell);\n            currentCell.innerHTML = !cell ? \"\" : cell;\n        });\n    });\n}\n\n})();\n//# sourceMappingURL=index.06180fd1.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst button = document.querySelector('.start');\nconst score = document.querySelector('.game-score');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nbutton.addEventListener('click', (e) => {\n  if (button.classList.contains('start')) {\n    button.classList.replace('start', 'restart');\n    button.textContent = 'Restart';\n    messageStart.classList.add('hidden');\n\n    game.start();\n    updateGameField();\n  } else {\n    button.classList.replace('restart', 'start');\n    button.textContent = 'Start';\n    messageStart.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n\n    game.restart();\n    updateGameField();\n    score.textContent = game.getScore();\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  switch (e.key) {\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n\n  if (game.getStatus() === Game.Status.lose) {\n    messageLose.classList.remove('hidden');\n  }\n\n  if (game.getStatus() === Game.Status.win) {\n    messageWin.classList.remove('hidden');\n  }\n\n  updateGameField();\n\n  score.textContent = game.getScore();\n});\n\nfunction updateGameField() {\n  const rows = [...document.querySelectorAll('.field-row')];\n  const cells = rows.map((row) => [...row.children]);\n\n  const state = game.getState();\n\n  state.forEach((row, i) => {\n    row.forEach((cell, j) => {\n      const currentCell = cells[i][j];\n\n      currentCell.className = !cell\n        ? 'field-cell'\n        : `field-cell field-cell--${cell}`;\n      currentCell.innerHTML = !cell ? '' : cell;\n    });\n  });\n}\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  static Status = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.status = Game.Status.idle;\n    this.initialState = initialState;\n    this.state = JSON.parse(JSON.stringify(initialState));\n    this.score = 0;\n  }\n\n  moveLeft() {\n    if (this.getStatus() === Game.Status.playing) {\n      const newState = [];\n\n      for (let r = 0; r < this.state.length; r++) {\n        let row = this.state[r];\n\n        row = this.move(row);\n        newState[r] = row;\n      }\n\n      if (this.checkPossibilityOfMerging(newState)) {\n        this.state = [...newState];\n        this.checkIsWin();\n        this.putNewGameNumber();\n      }\n\n      this.checkStatusLose(newState);\n    }\n  }\n\n  moveRight() {\n    if (this.getStatus() === Game.Status.playing) {\n      const newState = [];\n\n      for (let r = 0; r < this.state.length; r++) {\n        let row = [...this.state[r]];\n\n        row.reverse();\n\n        row = this.move(row);\n\n        row.reverse();\n\n        newState[r] = row;\n      }\n\n      if (this.checkPossibilityOfMerging(newState)) {\n        this.state = [...newState];\n        this.checkIsWin();\n        this.putNewGameNumber();\n      }\n\n      this.checkStatusLose(newState);\n    }\n  }\n\n  moveUp() {\n    if (this.getStatus() === Game.Status.playing) {\n      const newState = [...Array(4)].map(() => Array(4).fill(0));\n\n      for (let c = 0; c < this.state.length; c++) {\n        let row = [\n          this.state[0][c],\n          this.state[1][c],\n          this.state[2][c],\n          this.state[3][c],\n        ];\n\n        row = this.move(row);\n\n        for (let r = 0; r < this.state.length; r++) {\n          newState[r][c] = row[r];\n        }\n      }\n\n      if (this.checkPossibilityOfMerging(newState)) {\n        this.state = [...newState];\n        this.checkIsWin();\n        this.putNewGameNumber();\n      }\n\n      this.checkStatusLose(newState);\n    }\n  }\n\n  moveDown() {\n    if (this.getStatus() === Game.Status.playing) {\n      const newState = [...Array(4)].map(() => Array(4).fill(0));\n\n      for (let c = 0; c < this.state.length; c++) {\n        let row = [\n          this.state[0][c],\n          this.state[1][c],\n          this.state[2][c],\n          this.state[3][c],\n        ].reverse();\n\n        row = this.move(row);\n        row = row.reverse();\n\n        for (let r = 0; r < this.state.length; r++) {\n          newState[r][c] = row[r];\n        }\n      }\n\n      if (this.checkPossibilityOfMerging(newState)) {\n        this.state = [...newState];\n        this.checkIsWin();\n        this.putNewGameNumber();\n      }\n\n      this.checkStatusLose(newState);\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.Status.playing;\n    this.putNewGameNumber();\n    this.putNewGameNumber();\n  }\n\n  restart() {\n    this.score = 0;\n    this.status = Game.Status.idle;\n    this.state = JSON.parse(JSON.stringify(this.initialState));\n  }\n\n  checkIsWin() {\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length; j++) {\n        if (this.state[i][j] === 2048) {\n          this.status = Game.Status.win;\n\n          return;\n        }\n      }\n    }\n  }\n\n  checkPossibilityOfMerging(newState) {\n    return JSON.stringify(this.state) !== JSON.stringify(newState);\n  }\n\n  checkPossibilityOfMoving() {\n    const lengthOfArray = this.state.length;\n\n    for (let i = 0; i < lengthOfArray; i++) {\n      for (let j = 0; j < lengthOfArray; j++) {\n        if (\n          j < lengthOfArray - 1 &&\n          this.state[i][j] === this.state[i][j + 1]\n        ) {\n          return true;\n        }\n\n        if (\n          i < lengthOfArray - 1 &&\n          this.state[i][j] === this.state[i + 1][j]\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  checkStatusLose() {\n    if (this.getEmptyCells().length === 0 && !this.checkPossibilityOfMoving()) {\n      this.status = Game.Status.lose;\n    }\n  }\n\n  move(row) {\n    const fillRow = row.filter((num) => num !== 0);\n\n    for (let i = 0; i < fillRow.length - 1; i++) {\n      if (fillRow[i] === fillRow[i + 1]) {\n        fillRow[i] *= 2;\n        fillRow[i + 1] = 0;\n        this.score += fillRow[i];\n      }\n    }\n\n    const newFillRow = fillRow.filter((num) => num !== 0);\n\n    while (newFillRow.length < 4) {\n      newFillRow.push(0);\n    }\n\n    return newFillRow;\n  }\n\n  getEmptyCells() {\n    const emptyCells = [];\n\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length; j++) {\n        if (this.state[i][j] === 0) {\n          emptyCells.push([i, j]);\n        }\n      }\n    }\n\n    return emptyCells;\n  }\n\n  putNewGameNumber() {\n    const emptyCells = this.getEmptyCells();\n\n    if (emptyCells.length !== 0) {\n      const getRandomEmptyCell = Math.floor(Math.random() * emptyCells.length);\n      const row = emptyCells[getRandomEmptyCell][0];\n      const column = emptyCells[getRandomEmptyCell][1];\n\n      this.state[row][column] = Math.random() >= 0.9 ? 4 : 2;\n    }\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","key","value","$3d28d7f1aac198f5$exports","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","instance","Constructor","status","Status","idle","state","JSON","parse","stringify","score","getStatus","playing","newState","r","row","move","checkPossibilityOfMerging","checkIsWin","putNewGameNumber","checkStatusLose","reverse","map","fill","c","j","win","lengthOfArray","getEmptyCells","checkPossibilityOfMoving","lose","fillRow","filter","num","newFillRow","push","emptyCells","getRandomEmptyCell","Math","floor","random","column","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","obj","$197cd56b15c33885$var$game","$197cd56b15c33885$var$button","document","querySelector","$197cd56b15c33885$var$score","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$updateGameField","cells","rows","querySelectorAll","children","getState","forEach","cell","currentCell","className","concat","innerHTML","addEventListener","e","classList","contains","replace","textContent","add","start","remove","restart","getScore","moveRight","moveLeft","moveUp","moveDown"],"version":3,"file":"index.06180fd1.js.map"}